<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Close.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>